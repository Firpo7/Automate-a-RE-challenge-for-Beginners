x/s ebp-0x50
b* 0x080486e9
run
xormem $ebp-0x50 $ebp-0x0d "\x33\x00"
xormem $ebp-0x50 $ebp-0x0d "\x00\x33"
x/s $ebp-0x50
run
b* 0x080486e9
xormem $ebp-0x50 $ebp-0x0d "\x33\x00"   #xor chars in an even position
run
xormem $ebp-0x50 $ebp-0x0d "\x33\x00"   #xor chars in an even position
xormem $ebp-0x50 $ebp-0x0d "\x33\x00"   #xor chars in an even position
x/s ($ebp-0x50)                         #print the result as string
x/s ($ebp-0x50)                         #print the result as string
x/s ($ebp-0x50)                      #print the result as string
x/s ($ebp-0x50) #print the result as string
x/s ($ebp-0x50)#print the result as string
x/s ($ebp-0x50) # string
x/s ($ebp-0x50) # ing
print ($ebp-0x50) # ing
print ($ebp-0x50) 
print x ($ebp-0x50) 
print x/s ($ebp-0x50) 
print /s ($ebp-0x50) 
print (char *) ($ebp-0x50) 
print (char *) ($ebp-0x50) #cose
print (char *) ($ebp-0x50) //cose
print (char *) ($ebp-0x50) // cose
print (char *) ($ebp-0x50) ## cose
print (char *) ($ebp-0x50) ### cose
print (char *) ($ebp-0x50)  cose
print (char *) ($ebp-0x50)  #cose
print (char *) ($ebp-0x50)  /*sdsd*/
print (char *) ($ebp-0x50)  /* sdsd */
print (char *) ($ebp-0x50) #comments
print (char *) ($ebp-0x50) # #comments
print (char *) ($ebp-0x50) #comments
echo ciao
